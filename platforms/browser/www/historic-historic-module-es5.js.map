{"version":3,"sources":["webpack:///src/app/historic/historic.page.ts","webpack:///src/app/historic/historic.page.scss","webpack:///src/app/historic/historic.module.ts","webpack:///src/app/historic/historic-routing.module.ts","webpack:///src/app/historic/historic.page.html"],"names":["HistoricPage","storage","fData","route","router","lStorage","navCtrl","data","browsing","getBrowsingHistoric","likesItems","getLiked","queryParams","subscribe","params","getCurrentNavigation","extras","state","direction","categs","getCategories","items","getProducts","getbyPromotion","brands","getBrands","product","checkCase","check","length","item","description","err","console","log","param","optional","navigationExtras","option","navigate","navigateForward","code","selector","template","HistoricPageModule","imports","declarations","routes","path","component","HistoricPageRoutingModule","forChild","exports"],"mappings":"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","file":"historic-historic-module-es5.js","sourcesContent":["import { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute, NavigationExtras, Router } from '@angular/router';\nimport { NavController } from '@ionic/angular';\nimport { Storage} from '@ionic/storage';\nimport { Observable } from 'rxjs';\nimport { Brands } from 'src/models/brands';\nimport { Categories } from 'src/models/category';\nimport {  Product } from 'src/models/product';\nimport { FirestoreDataService } from '../firestore-data.service';\nimport { LocalStorageService } from '../local-storage.service';\n\n@Component({\n  selector: 'app-historic',\n  templateUrl: './historic.page.html',\n  styleUrls: ['./historic.page.scss'],\n})\nexport class HistoricPage implements OnInit {\n\n  data: string='';\n  browsing: Product[];\n  likesItems: Product[];\n  items: Observable<Product[]>;\n  categs: Observable<Categories[]>;\n  brands: Observable<Brands[]>;\n  constructor(private storage: Storage, private fData: FirestoreDataService, private route: ActivatedRoute, \n              private router: Router, private lStorage: LocalStorageService, private navCtrl: NavController) \n  {   }\n\n  ngOnInit() {\n\n    this.browsing = this.lStorage.getBrowsingHistoric();\n    this.likesItems = this.lStorage.getLiked();\n    this.route.queryParams.subscribe(params => {\n      if (this.router.getCurrentNavigation().extras.state) {\n        this.data = this.router.getCurrentNavigation().extras.state.direction;\n        switch(this.data){\n          case 'Buy by categories': this.categs = this.fData.getCategories();\n          break;\n          case 'Recent Views': this.items = this.fData.getProducts();\n          break;\n          case 'Wish List': this.items = this.fData.getProducts();\n          break;\n          case 'Today Deals': this.items = this.fData.getbyPromotion('Today Deals');\n          break;\n          case 'By Tomorrow': this.items = this.fData.getbyPromotion('By Tomorrow');\n          break;\n          case 'brand': this.brands = this.fData.getBrands();\n          break;\n        }\n      }\n    });\n  }\n\n  updateCheck(product: Product, checkCase: string){\n    let check:boolean = false;\n    try{\n      if(checkCase == 'Wish List' && this.likesItems.length!==0){\n        for(let item of this.likesItems){\n          if(item.description == product.description){\n            check = true;\n          }\n        }\n      }\n      else if(checkCase == 'Recent Views' && this.browsing.length!==0){\n        for(let item of this.browsing){\n          if(item.description == product.description){\n            check = true;\n          }\n        }\n      }\n    }catch(err){\n      console.log(\"empty data\"+err);\n    }\n   \n    return check;\n  }\n\n  linkTo(param: string, optional:string){\n    const navigationExtras: NavigationExtras = {\n      state: {\n        item: param,\n        option: optional\n      }\n    };\n    this.router.navigate(['/categories'], navigationExtras);\n  }\n  \n  goTo(item: any): void {\n    this.navCtrl.navigateForward(\"/product?productId=\"+item.code);\n  }\n  \n}\n\n\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2hpc3RvcmljL2hpc3RvcmljLnBhZ2Uuc2NzcyJ9 */\";","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\nimport { SharedviewsModule } from '../sharedviews/sharedviews.module';\nimport { IonicModule } from '@ionic/angular';\n\nimport { HistoricPageRoutingModule } from './historic-routing.module';\n\nimport { HistoricPage } from './historic.page';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    IonicModule,\n    SharedviewsModule,\n    HistoricPageRoutingModule\n  ],\n  declarations: [HistoricPage]\n})\nexport class HistoricPageModule {}\n","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { HistoricPage } from './historic.page';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: HistoricPage\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule],\n})\nexport class HistoricPageRoutingModule {}\n","export default \"<app-page-header></app-page-header>\\n<ion-content>\\n  <ion-item lines=\\\"none\\\" color=\\\"light\\\">\\n    <ion-label>{{data | uppercase}}</ion-label>\\n    <ion-button fill=\\\"clear\\\" slot=\\\"end\\\">Filter\\n      <ion-icon name=\\\"chevron-forward-outline\\\"></ion-icon>\\n    </ion-button>\\n  </ion-item>\\n  <div class=\\\"container-fluid\\\">\\n    <ion-grid>\\n      <ion-row *ngIf=\\\"data!=='Buy by categories' && data!=='brand'\\\">\\n        <ng-container  *ngFor=\\\"let item of items| async\\\">\\n          <ion-col size=\\\"6\\\" *ngIf=\\\"updateCheck(item,data) && (data=='Recent Views' || data =='Wish List')\\\">\\n            <ion-card-content style=\\\"padding-bottom: 0;\\\" (click)=\\\"goTo(item)\\\">\\n              <ion-img style=\\\"box-sizing:border-box;\\\" [src]=\\\"item.models[0].pictures[0]\\\"></ion-img>\\n            </ion-card-content>\\n            <ion-card-header (click)=\\\"goTo(item)\\\">\\n              <ion-text color=\\\"dark\\\">\\n                <h6  style=\\\"font-size: 13px; font-weight: bold;\\\">{{item.description}}</h6>\\n              </ion-text>\\n              <ion-card-subtitle >{{item.name}}</ion-card-subtitle>\\n            </ion-card-header>\\n\\n            <ion-card-title>\\n              <ion-item>\\n                <ion-label color=\\\"dark\\\">\\n                  {{item.caracteristic[0].price|currency}}\\n                </ion-label>\\n                <ion-label>\\n                  <ion-icon name=\\\"star\\\" *ngIf=\\\"item.rating>0\\\"></ion-icon>\\n                  <ion-icon name=\\\"star\\\" *ngIf=\\\"item.rating>1\\\"></ion-icon>\\n                  <ion-icon name=\\\"star\\\" *ngIf=\\\"item.rating>2\\\"></ion-icon>\\n                  <ion-icon name=\\\"star\\\" *ngIf=\\\"item.rating>3\\\"></ion-icon>\\n                  <ion-icon name=\\\"star\\\" *ngIf=\\\"item.rating>4\\\"></ion-icon> \\n                </ion-label>\\n                \\n              </ion-item>\\n            </ion-card-title>\\n        </ion-col>\\n        <ion-col size=\\\"6\\\" *ngIf=\\\"data!=='Recent Views' && data !=='Wish List'\\\">\\n          <ion-card-content style=\\\"padding-bottom: 0;\\\" (click)=\\\"goTo(item)\\\">\\n            <ion-img style=\\\"box-sizing:border-box;\\\" [src]=\\\"item.models[0].pictures[0]\\\"></ion-img>\\n          </ion-card-content>\\n          <ion-card-header (click)=\\\"goTo(item)\\\">\\n            <ion-text color=\\\"dark\\\">\\n              <h6  style=\\\"font-size: 13px; font-weight: bold;\\\">{{item.description}}</h6>\\n            </ion-text>\\n            <ion-card-subtitle >{{item.name}}</ion-card-subtitle>\\n          </ion-card-header>\\n\\n          <ion-card-title>\\n            <ion-item>\\n              <ion-label color=\\\"dark\\\">\\n                {{item.caracteristic[0].price|currency}}\\n              </ion-label>\\n              <ion-label>\\n                <ion-icon name=\\\"star\\\" *ngIf=\\\"item.rating>0\\\"></ion-icon>\\n                <ion-icon name=\\\"star\\\" *ngIf=\\\"item.rating>1\\\"></ion-icon>\\n                <ion-icon name=\\\"star\\\" *ngIf=\\\"item.rating>2\\\"></ion-icon>\\n                <ion-icon name=\\\"star\\\" *ngIf=\\\"item.rating>3\\\"></ion-icon>\\n                <ion-icon name=\\\"star\\\" *ngIf=\\\"item.rating>4\\\"></ion-icon> \\n              </ion-label>\\n              \\n            </ion-item>\\n          </ion-card-title>\\n      </ion-col>\\n        </ng-container>\\n      </ion-row>\\n\\n      <ion-row *ngIf=\\\"data=='Buy by categories'\\\">\\n        <ion-card *ngFor=\\\"let categ of categs| async\\\" >\\n          <ion-card-content (click)=\\\"linkTo(categ.categoryName,'category')\\\">\\n            <ion-img [src]=\\\"categ.image\\\"></ion-img>\\n            <ion-card-header>\\n              <ion-card-title>{{categ.categoryName}}</ion-card-title>\\n            </ion-card-header>\\n          </ion-card-content>\\n        </ion-card>\\n      </ion-row>\\n      <ion-row *ngIf=\\\"data=='brand'\\\">\\n        <ion-card *ngFor=\\\"let brand of brands| async\\\" >\\n          <ion-card-content (click)=\\\"linkTo(brand.brandName,'brand')\\\">\\n            <ion-img [src]=\\\"brand.logo\\\"></ion-img>\\n            <ion-card-header>\\n              <ion-card-title>{{brand.brandName}}</ion-card-title>\\n              <ion-card-subtitle>{{brand.slogan}}</ion-card-subtitle>\\n            </ion-card-header>\\n          </ion-card-content>\\n        </ion-card>\\n      </ion-row>\\n    </ion-grid>\\n  </div>\\n</ion-content>\\n\";"]}