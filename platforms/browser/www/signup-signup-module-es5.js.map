{"version":3,"sources":["webpack:///src/app/signup/signup.page.html","webpack:///src/app/signup/signup-routing.module.ts","webpack:///src/app/signup/signup.module.ts","webpack:///src/app/signup/signup.page.scss","webpack:///src/app/signup/signup.page.ts"],"names":["routes","path","component","SignupPageRoutingModule","imports","forChild","exports","SignupPageModule","declarations","entryComponents","SignupPage","loadingController","alertController","pickerCtrl","formBuilder","modalcontroller","storage","route","router","civilite","registrationForm","group","identification","name","required","maxLength","birthday","location","address1","address2","city","state","phone","pattern","zipcode","paymethod","method","agree","requiredTrue","security","mail","password","minLength","confirm","errorMessages","type","message","user","address","get","valid","value","create","cssClass","header","subHeader","buttons","alert","present","duration","then","loaded","onDidDismiss","dismiss","storeAddress","persistenceLogin","loading","queryParams","subscribe","params","getCurrentNavigation","extras","data","order","set","register","email","connection","status","navigationExtras","product","info","navigate","_character","sequence","Math","floor","random","index","encryption","length","push","id","crypto","selector","template"],"mappings":"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","file":"signup-signup-module-es5.js","sourcesContent":["export default \"<ion-header>\\n  <ion-toolbar>\\n    <ion-buttons style=\\\"margin-top:5%;\\\" slot=\\\"start\\\">\\n      <ion-back-button></ion-back-button>\\n    </ion-buttons>\\n    <ion-title  class=\\\"width\\\" mode=ios >\\n      <ion-text size=\\\"LARGE\\\" color=\\\"warning\\\">\\n        K</ion-text>\\n        <ion-text color=\\\"danger\\\"><ion-icon size=\\\"LARGE\\\" name=cart></ion-icon></ion-text>\\n        <ion-text >ta</ion-text><img title=\\\"Katalog icon\\\" class=\\\"icon\\\" src=\\\"assets/icon/lipstick.png\\\"/><ion-text>og</ion-text>\\n      </ion-title>\\n  </ion-toolbar>\\n</ion-header>\\n\\n<ion-content>\\n\\n<form [formGroup]=\\\"registrationForm\\\" (ngSubmit)=\\\"submit()\\\">\\n  <ion-item-group formGroupName=\\\"identification\\\" >\\n    <ion-item-divider style=\\\"background: rgb(41, 54, 75);\\\">\\n      <ion-icon name=\\\"person\\\"></ion-icon>\\n      <ion-label style=\\\"color: cornsilk; font-size: 16px;\\\">Identification</ion-label>\\n    </ion-item-divider>\\n    <ion-item>\\n      <ion-label position=\\\"stacked\\\">Your name <span>*</span></ion-label>\\n      <ion-input inputmode=\\\"text\\\"  placeholder=\\\"Ex : Smith Anderson\\\" required=\\\"true\\\" formControlName=\\\"name\\\"></ion-input>\\n    </ion-item>\\n    <div *ngFor=\\\"let error of errorMessages.name\\\" style=\\\"padding-left: 5%\\\">\\n      <ng-container *ngIf=\\\"getName().hasError(error.type) && (getName().dirty || getName().touched)\\\">\\n        <small class=\\\"error-message\\\">{{error.message}}</small>\\n      </ng-container>\\n    </div>\\n    <ion-item>\\n      <ion-label position=\\\"stacked\\\">Civilite</ion-label>\\n      <ion-label position=\\\"fixed\\\">Select your civil status?</ion-label>\\n      <ion-select formControlName=\\\"civilite\\\" [value]=\\\"civilite[0]\\\">\\n        <ion-select-option value=\\\"0\\\">Select your civil status?</ion-select-option>\\n        <ion-select-option *ngFor=\\\"let opts of civilite\\\">{{opts}}</ion-select-option>\\n      </ion-select>\\n    </ion-item>\\n    <ion-item>\\n      <ion-label ion-button position=\\\"stacked\\\">Birthday Date</ion-label>\\n      <ion-datetime inputmode=\\\"date\\\" placeholder=\\\"1994-03-14\\\" formControlName=\\\"birthday\\\" displayFormat=\\\"MM/DD/YYYY\\\" min=\\\"1994-03-14\\\"\\n        max=\\\"2012-12-09\\\"></ion-datetime>\\n    </ion-item>\\n  </ion-item-group>\\n\\n  <ion-item-group formGroupName=\\\"location\\\">\\n    <ion-item-divider style=\\\"background: rgb(41, 54, 75);\\\">\\n      <ion-icon name=\\\"location\\\"></ion-icon>\\n      <ion-label style=\\\"color: cornsilk; font-size: 16px;\\\">Location</ion-label>\\n    </ion-item-divider>\\n    <ion-item>\\n      <ion-label>Address Line 1<span>*</span></ion-label>\\n      <ion-input formControlName=\\\"address1\\\" placeholder=\\\"Street, Apt, Building number...\\\"></ion-input>\\n    </ion-item>\\n    <div *ngFor=\\\"let error of errorMessages.address1\\\" style=\\\"padding-left: 5%\\\">\\n      <ng-container *ngIf=\\\"getAddress1().hasError(error.type) && (getAddress1().dirty || getAddress1().touched)\\\">\\n        <small class=\\\"error-message\\\">{{error.message}}</small>\\n      </ng-container>\\n    </div>\\n    <ion-item>\\n      <ion-label>Address Line 2</ion-label>\\n      <ion-input formControlName=\\\"address2\\\" placeholder=\\\"Optional\\\"></ion-input>\\n    </ion-item>\\n    <ion-item>\\n      <ion-label position=\\\"fixed\\\">City<span>*</span></ion-label>\\n      <ion-input formControlName=\\\"city\\\" placeholder=\\\"add a city name\\\"></ion-input>\\n    </ion-item>\\n    <div *ngFor=\\\"let error of errorMessages.city\\\" style=\\\"padding-left: 5%\\\">\\n      <ng-container *ngIf=\\\"getCity().hasError(error.type) && (getCity().dirty || getCity().touched)\\\">\\n        <small class=\\\"error-message\\\">{{error.message}}</small>\\n      </ng-container>\\n    </div>\\n    <ion-item>\\n      <ion-label position=\\\"fixed\\\">State<span>*</span></ion-label>\\n      <ion-input formControlName=\\\"state\\\" placeholder=\\\"if you not in US add country name\\\">\\n      </ion-input>\\n    </ion-item>\\n    <div *ngFor=\\\"let error of errorMessages.state\\\" style=\\\"padding-left: 5%\\\">\\n      <ng-container *ngIf=\\\"getState().hasError(error.type) && (getState().dirty || getState().touched)\\\">\\n        <small class=\\\"error-message\\\">{{error.message}}</small>\\n      </ng-container>\\n    </div>\\n    <ion-item>\\n      <ion-label position=\\\"fixed\\\">Phone Number<span>*</span></ion-label>\\n      <ion-input inputmode=\\\"tel\\\" formControlName=\\\"phone\\\" placeholder=\\\"+(area Code) number phone...\\\"></ion-input>\\n    </ion-item>\\n    <div *ngFor=\\\"let error of errorMessages.phone\\\" style=\\\"padding-left: 5%\\\">\\n      <ng-container *ngIf=\\\"getPhone().hasError(error.type) && (getPhone().dirty || getPhone().touched)\\\">\\n        <small class=\\\"error-message\\\">{{error.message}}</small>\\n      </ng-container>\\n    </div>\\n    <ion-item>\\n      <ion-label position=\\\"fixed\\\">Zip Code<span>*</span></ion-label>\\n      <ion-input formControlName=\\\"zipcode\\\" placeholder=\\\"digits only...\\\"></ion-input>\\n    </ion-item>\\n    <div *ngFor=\\\"let error of errorMessages.zipcode\\\" style=\\\"padding-left: 5%\\\">\\n      <ng-container *ngIf=\\\"getZipcode().hasError(error.type) && (getZipcode().dirty || getZipcode().touched)\\\">\\n        <small class=\\\"error-message\\\">{{error.message}}</small>\\n      </ng-container>\\n    </div>\\n  </ion-item-group>\\n\\n  <ion-item-group formGroupName=\\\"security\\\">\\n    <ion-item-divider style=\\\"background: rgb(41, 54, 75);\\\">\\n      <ion-icon name=\\\"key\\\"></ion-icon>\\n      <ion-label style=\\\"color: cornsilk; font-size: 16px;\\\">Password & Security</ion-label>\\n    </ion-item-divider>\\n    <ion-item>\\n      <ion-label position=\\\"fixed\\\">E-mail<span>*</span></ion-label>\\n      <ion-input formControlName=\\\"mail\\\" placeholder=\\\"Enter your account mail..\\\"></ion-input>\\n    </ion-item>\\n    <div *ngFor=\\\"let error of errorMessages.mail\\\" style=\\\"padding-left: 5%\\\">\\n      <ng-container *ngIf=\\\"getMail().hasError(error.type) && (getMail().dirty || getMail().touched)\\\">\\n        <small class=\\\"error-message\\\">{{error.message}}</small>\\n      </ng-container>\\n    </div>\\n    <ion-item>\\n      <ion-label position=\\\"fixed\\\">Password<span>*</span></ion-label>\\n      <ion-input type=\\\"password\\\" formControlName=\\\"password\\\" placeholder=\\\"at least 8 characters with digits\\\"></ion-input>\\n    </ion-item>\\n    <div *ngFor=\\\"let error of errorMessages.password\\\" style=\\\"padding-left: 5%\\\">\\n      <ng-container *ngIf=\\\"getPassword().hasError(error.type) && (getPassword().dirty || getPassword().touched)\\\">\\n        <small class=\\\"error-message\\\">{{error.message}}</small>\\n      </ng-container>\\n    </div>\\n    <ion-item>\\n      <ion-label position=\\\"fixed\\\">Confirm<span>*</span></ion-label>\\n      <ion-input type=\\\"password\\\" formControlName=\\\"confirm\\\" placeholder=\\\"Re-type your password...\\\"></ion-input>\\n    </ion-item>\\n  </ion-item-group>\\n\\n  <ion-item-group formGroupName=\\\"paymethod\\\">\\n    <ion-item-divider style=\\\"background: rgb(41, 54, 75);\\\">\\n      <ion-icon name=\\\"card\\\"></ion-icon>\\n      <ion-label style=\\\"color: cornsilk; font-size: 16px;\\\">Terms And Payment</ion-label>\\n    </ion-item-divider>\\n    <ion-item>\\n      <ion-label position=\\\"stacked\\\">Default Payment Method</ion-label>\\n      <ion-input readonly=\\\"true\\\" placeholder=\\\"Pay easily by Card, and More...\\\" formControlName=\\\"method\\\" [value]=\\\"method\\\" color=\\\"primary\\\"></ion-input>\\n      <ion-button fill=\\\"clear\\\" slot=\\\"end\\\">select</ion-button>\\n    </ion-item>\\n    <div *ngFor=\\\"let error of errorMessages.method\\\" style=\\\"padding-left: 5%\\\">\\n      <ng-container *ngIf=\\\"getMethod().hasError(error.type) && (getMethod().dirty || getMethod().touched)\\\">\\n        <small class=\\\"error-message\\\">{{error.message}}</small>\\n      </ng-container>\\n    </div>\\n    <ion-item>\\n      <ion-checkbox  formControlName=\\\"agree\\\"></ion-checkbox>\\n      <ion-label style=\\\"margin-left:10px\\\" color=\\\"tertiary\\\">I'm agree with terms and conditions?</ion-label>\\n    </ion-item>\\n    <ion-item>\\n      <ion-icon name=\\\"document-text-outline\\\"></ion-icon>\\n      <ion-label slot=\\\"end\\\" style=\\\"margin-right:10px; font-size: 10px;\\\" color=\\\"tertiary\\\">See Terms and Condition\\n      </ion-label>\\n    </ion-item>\\n  </ion-item-group>\\n  <section>\\n    <ion-button button  expand=\\\"block\\\" type=\\\"submit\\\">SIGN UP FOR FREE</ion-button>\\n  </section>\\n  \\n</form>\\n\\n</ion-content>\\n\";","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { SignupPage } from './signup.page';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: SignupPage\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule],\n})\nexport class SignupPageRoutingModule {}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\nimport { ReactiveFormsModule} from '@angular/forms';\n\nimport { IonicModule } from '@ionic/angular';\n\nimport { SignupPageRoutingModule } from './signup-routing.module';\n\nimport { SignupPage } from './signup.page';\n\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    IonicModule,\n    SignupPageRoutingModule,\n    ReactiveFormsModule\n  ],\n  declarations: [SignupPage],\n  entryComponents: []\n})\nexport class SignupPageModule {}\n","export default \".icon {\\n  width: 20px;\\n  height: 28px;\\n  border: none;\\n  padding: 2px;\\n}\\n\\n.width {\\n  font-size: 26px;\\n}\\n\\nsection {\\n  margin-top: 1em;\\n  margin-bottom: 2.5em;\\n}\\n\\n.error-message {\\n  color: var(--ion-color-danger);\\n}\\n\\nsection:not(.full-width),\\n.full-width > header {\\n  padding: 0 10px;\\n}\\n\\n.my-custom-class {\\n  --background: #222;\\n  --spinner-color: #fff;\\n  color: #fff;\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvc2lnbnVwL3NpZ251cC5wYWdlLnNjc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7RUFDSSxXQUFBO0VBQ0EsWUFBQTtFQUNBLFlBQUE7RUFDQSxZQUFBO0FBQ0o7O0FBQ0U7RUFDRSxlQUFBO0FBRUo7O0FBQUU7RUFDRSxlQUFBO0VBQ0Esb0JBQUE7QUFHSjs7QUFERTtFQUNFLDhCQUFBO0FBSUo7O0FBRkU7O0VBRUUsZUFBQTtBQUtKOztBQUhFO0VBQ0Usa0JBQUE7RUFDQSxxQkFBQTtFQUVBLFdBQUE7QUFLSiIsImZpbGUiOiJzcmMvYXBwL3NpZ251cC9zaWdudXAucGFnZS5zY3NzIiwic291cmNlc0NvbnRlbnQiOlsiLmljb257XG4gICAgd2lkdGg6IDIwcHg7XG4gICAgaGVpZ2h0OiAyOHB4O1xuICAgIGJvcmRlcjogbm9uZTtcbiAgICBwYWRkaW5nOjJweDtcbiAgfVxuICAud2lkdGh7XG4gICAgZm9udC1zaXplOiAyNnB4O1xuICB9XG4gIHNlY3Rpb24ge1xuICAgIG1hcmdpbi10b3A6IDFlbTtcbiAgICBtYXJnaW4tYm90dG9tOiAyLjVlbTtcbiAgfVxuICAuZXJyb3ItbWVzc2FnZSB7XG4gICAgY29sb3I6IHZhcigtLWlvbi1jb2xvci1kYW5nZXIpO1xufVxuICBzZWN0aW9uOm5vdCguZnVsbC13aWR0aCksXG4gIC5mdWxsLXdpZHRoID4gaGVhZGVyIHtcbiAgICBwYWRkaW5nOiAwIDEwcHg7XG4gIH1cbiAgLm15LWN1c3RvbS1jbGFzcyB7XG4gICAgLS1iYWNrZ3JvdW5kOiAjMjIyO1xuICAgIC0tc3Bpbm5lci1jb2xvcjogI2ZmZjtcbiAgXG4gICAgY29sb3I6ICNmZmY7XG4gIH0iXX0= */\";","import { Component, OnInit } from '@angular/core';\nimport { LoadingController, PickerController, AlertController, ModalController } from '@ionic/angular';\nimport {ActivatedRoute, Router, NavigationExtras} from '@angular/router';\nimport { FormBuilder, Validators } from '@angular/forms';\nimport { Product } from 'src/models/product';\nimport { Storage} from '@ionic/storage';\nimport { Address } from 'src/models/addresses';\nimport { User } from 'src/models/user';\n\n\n@Component({\n  selector: 'app-signup',\n  templateUrl: './signup.page.html',\n  styleUrls: ['./signup.page.scss'],\n})\nexport class SignupPage implements OnInit{\n\n  civilite = ['Mr', 'Mme', 'Mlle', 'Miss', 'Other'];\n  method: string;\n  check: true;\n  data: Product|'';\n  user:  User;\n  registrationForm = this.formBuilder.group({\n    identification: this.formBuilder.group({\n      name: ['', [Validators.required, Validators.maxLength(100)]],\n      civilite: [''],\n      birthday: [''],\n    }),\n    location: this.formBuilder.group({\n      address1: ['', [Validators.required, Validators.maxLength(100)]],\n      address2: [''],\n      city: ['', [Validators.required, Validators.maxLength(100)]],\n      state: ['', [Validators.required, Validators.maxLength(100)]],\n      phone: ['', [Validators.required, Validators.pattern('^[+]*[(]{0,1}[0-9]{1,4}[)]{0,1}[-s./0-9]*$')]],\n      zipcode: ['', [Validators.required, Validators.pattern('^[0-9]{5}(?:-[0-9]{4})?$')]]\n    }),\n    paymethod: this.formBuilder.group({\n      method: ['', [Validators.required]],\n      agree: [false, [Validators.requiredTrue]]\n    }),\n    security: this.formBuilder.group({\n      mail: ['', [Validators.required, Validators.pattern('^[a-zA-Z0-9._%-]+@[a-zA-Z0-9.-]+.[a-zA-Z]{2,4}$')]],\n      password: ['', [Validators.required, Validators.minLength(8), Validators.pattern('^(?=.*[a-z])(?=.*[A-Z])(?=.*[0-9])[a-zA-Z0-9]+$')]],\n      confirm: ['',[Validators.minLength(8), Validators.pattern('^(?=.*[a-z])(?=.*[A-Z])(?=.*[0-9])[a-zA-Z0-9]+$')]]\n    })\n  });\n\n  constructor( public loadingController: LoadingController, private alertController: AlertController,\n              private pickerCtrl: PickerController, private formBuilder: FormBuilder, private modalcontroller: ModalController,\n              private storage: Storage, private route: ActivatedRoute, private router: Router) {\n                this.user = {} as User;\n                this.user.address = {} as Address;\n              }\n\npublic errorMessages = {\n  name: [\n    {type: 'required', message: 'Name is required' },\n    {type: 'maxlenght', message: 'Name can\\'t be longer than 100 characters'}\n  ],\n  address1: [\n    {type: 'required', message: 'Main address is required' },\n    {type: 'maxlenght', message: 'City can\\'t be longer than 100 characters'}\n  ],\n  city: [\n    {type: 'required', message: 'City is required' },\n    {type: 'maxlenght', message: 'City can\\'t be longer than 100 characters'}\n  ],\n  state: [\n    {type: 'required', message: 'State is required' },\n    {type: 'maxlenght', message: 'State can\\'t be longer than 100 characters'}\n  ],\n  phone: [\n    {type: 'required', message: 'Phone is required' },\n    {type: 'pattern', message: 'Please enter a valid number phone'}\n  ],\n  zipcode: [\n    {type: 'required', message: 'Zipcode is fully required' },\n    {type: 'pattern', message: 'Please enter a valid zip code number!'}\n  ],\n  mail: [\n    {type: 'required', message: 'E-mail is fully required' },\n    {type: 'pattern', message: 'Please enter a valid email address'}\n  ],\n  password: [\n    {type: 'required', message: 'Password is fully required' },\n    {type: 'pattern', message: 'Password must be at least 8 characters with digits and uppercase'}\n  ],\n  method: [\n    {type: 'required', message: 'City is required' }\n  ]\n};\n\n getName(){\n   return this.registrationForm.get('identification.name');\n }\n getCivilite(){\n  return this.registrationForm.get('identification.civilite');\n}\ngetBirth(){\n  return this.registrationForm.get('identification.birthday');\n}\ngetAddress1(){\n  return this.registrationForm.get('location.address1');\n}\ngetAddress2(){\n  return this.registrationForm.get('location.address2');\n}\ngetCity(){\n  return this.registrationForm.get('location.city');\n}\ngetState(){\n  return this.registrationForm.get('location.state');\n}\ngetPhone(){\n  return this.registrationForm.get('location.phone');\n}\ngetZipcode(){\n  return this.registrationForm.get('location.zipcode');\n}\n\ngetMail(){\n  return this.registrationForm.get('security.mail');\n}\ngetPassword(){\n  return this.registrationForm.get('security.password');\n}\ngetConfirm(){\n  return this.registrationForm.get('security.confirm');\n}\ngetMethod(){\n  return this.registrationForm.get('paymethod.method');\n}\ngetAgree(){\n  return this.registrationForm.get('paymethod.agree');\n}\n  public async submit() {\n  \n      if(this.registrationForm.valid){\n       \n        if ( this.registrationForm.get('security.confirm').value !== this.registrationForm.get('security.password').value) {\n\n          const alert = await this.alertController.create({\n            cssClass: 'my-custom-class',\n            header: 'Alert',\n            subHeader: 'Subtitle',\n            message: 'Password & confirm must be same.',\n            buttons: ['Ok']\n          });\n          await alert.present();\n        }else{\n          const loading = await this.loadingController.create({\n            cssClass: 'my-custom-class',\n            message: 'Please wait...',\n            duration: 2000\n          }).then((loaded)=>{\n            loaded.present();\n            loaded.onDidDismiss().then((dismiss)=>{\n              this.storeAddress();\n              this.persistenceLogin(this.registrationForm.value);\n            });\n          });\n        \n        }\n        \n      }else{\n        const alert = await this.alertController.create({\n          cssClass: 'my-custom-class',\n          header: 'Alert',\n          subHeader: 'Subtitle',\n          message: 'Required field must be fill correctly.',\n          buttons: ['Ok']\n        });\n        await alert.present();\n      }\n      \n      \n  }\n\n\n\n /*  async showMethod() {\n    const opts: PickerOptions = {\n      buttons: [\n        {\n          text: 'Done',\n          role: 'Done'\n        }\n      ],\n      columns: [\n        {\n          name: 'method',\n          options: [\n            { text: 'None', value: 'none' },\n            { text: 'MonCash$', value: 'moncash' },\n            { text: 'Star Card Balance', value: 'sc' },\n            { text: 'PayPal', value: 'pp' },\n            { text: 'Cashapp', value: 'cashapp' }\n          ]\n\n        }\n      ]\n    };\n    const picker = await this.pickerCtrl.create(opts);\n    picker.present();\n    picker.onDidDismiss().then(async data => {\n      const col = await picker.getColumn('method');\n      this.method = col.options[col.selectedIndex].text;\n      if (this.method === 'MonCash$'){\n        this.openModal(this.method);\n      }else if (this.method === 'PayPal'){\n        this.openModal(this.method);\n      }\n    });\n  } */\n\n  ngOnInit() {\n    this.route.queryParams.subscribe(params => {\n      if (this.router.getCurrentNavigation().extras.state) {\n        this.data = this.router.getCurrentNavigation().extras.state.order;\n        }\n    });\n  }\n \n\n  addInfo(value: any){\n    this.storage.set('moncashId', value);\n    }\n\n    persistenceLogin(register: any){\n\n        this.user.type = \"USER\"\n        this.user.name = register.identification.name\n        this.user.email = register.security.mail;\n        this.user.password = register.security.password;\n        this.user.address.address1 = register.location.address1;\n        this.user.address.address2 = register.location.address1;\n        this.user.address.phone = register.location.phone;\n        this.user.address.city =register.location.city;\n        this.user.address.state=register.location.state;\n        this.user.address.zipcode=register.location.zipcode;\n        this.user.civilite = register.identification.civilite;\n        this.user.birthday = register.identification.birthday;\n        this.user.connection = true;\n        this.user.status= true;\n       const navigationExtras: NavigationExtras = {\n        state: {\n          product: this.data,\n          info: this.user\n        }\n      };\n      this.router.navigate(['/verification'], navigationExtras);\n    }\n\n    crypto(){\n      let _character=['F','A','S','H','I','O','N','T','R','B','E','U','Y'];\n      let sequence:number = Math.floor(Math.random()*100);\n      let index:number= Math.floor(Math.random() * 12);\n      let encryption:string = _character[index]+_character[index+1]+sequence;\n      return encryption;\n    }\n    storeAddress(){\n      this.storage.get(\"address\").then((data:Address[])=>{\n        if(data === null || data.length === 0){\n          data=[];\n          data.push({\n            id: this.crypto(),\n            name: this.registrationForm.get('identification.name').value,\n            address1: this.registrationForm.get('location.address1').value,\n            address2: this.registrationForm.get('location.address2').value,\n            city: this.registrationForm.get('location.city').value,\n            phone:this.registrationForm.get('location.phone').value,\n            state: this.registrationForm.get('location.state').value,\n            zipcode: this.registrationForm.get('location.zipcode').value,\n            default: false\n          });\n        }else{\n            data.push({\n              id: this.crypto(),\n              name: this.registrationForm.get('identification.name').value,\n              address1: this.registrationForm.get('location.address1').value,\n              address2: this.registrationForm.get('location.address2').value,\n              city: this.registrationForm.get('location.city').value,\n              phone:this.registrationForm.get('location.phone').value,\n              state: this.registrationForm.get('location.state').value,\n              zipcode: this.registrationForm.get('location.zipcode').value,\n              default: false\n            });\n          \n        }\n        this.storage.set(\"address\",data);\n       \n      });\n    }\n    \n    \n}\n"]}