{"version":3,"sources":["./src/app/helpcenter/helpcenter.page.ts","./src/app/helpcenter/helpcenter.page.html","./src/app/helpcenter/helpcenter.page.scss","./src/app/helpcenter/helpcenter.module.ts","./src/app/helpcenter/helpcenter-routing.module.ts"],"names":[],"mappings":"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","file":"helpcenter-helpcenter-module-es2015.js","sourcesContent":["import { Component, OnInit } from '@angular/core';\nimport { AngularFireAuth } from '@angular/fire/auth';\nimport { AngularFirestore, AngularFirestoreCollection, DocumentData } from '@angular/fire/firestore';\nimport { Router } from '@angular/router';\nimport { AnimationController } from '@ionic/angular';\nimport { Observable } from 'rxjs';\nimport { Message } from 'src/models/message';\nimport { Order } from 'src/models/order';\nimport { isNullOrUndefined } from 'util';\nimport { FirestoreDataService } from '../firestore-data.service';\n\n@Component({\n  selector: 'app-helpcenter',\n  templateUrl: './helpcenter.page.html',\n  styleUrls: ['./helpcenter.page.scss'],\n})\nexport class HelpcenterPage implements OnInit {\n  textMesage: string;\n  connected: boolean;\n  msg: Message;\n  order: Observable<DocumentData[]>;\n  orderInfo: Order;\n  msgDataFlux: Observable<DocumentData[]>;\n  messageCollection: AngularFirestoreCollection<Message>;\n  message: Message[];\n  updateMessage: Message[]\n  userId: any;\n  kindnessIntroSpeech = '';\n  kindnessEndSpeech = '';\n  dialogFlow = {\n    introduction: ['hello! im kindness the IA, and Im here to help you. Please tell me what matter!', 'Hi, Im Kindness How can i make you happy!','Haloa, please select an option and I\\'ll help you'],\n    box1: false,\n    box2: false,\n    box3: false,\n    box4: false,\n    box3Option: false,\n    transfer: false,\n    happyMood: ['You Welcome!!', 'Apreciate see you!','That my lovely job','Please continue shopping for your favorites items'],\n    sorryMood: ['Sorry that, i won\\'t help i\\'ll do better next time', 'Disapointed, maybe you want to talk with a real person ?', 'My Fault, let me know if you want me transfer your issue to another person']\n  }\n  constructor(private afAuth: AngularFireAuth, private ngfirestore: AngularFirestore, private fdataService: FirestoreDataService) { \n    this.afAuth.authState.subscribe(auth=>{\n      if(!auth){\n        this.connected = false;\n      }else{\n        this.msg = {} as Message;\n        this.orderInfo = {} as Order;\n        this.userId = auth.uid;\n        //this.deleteMessage(this.userId);\n        this.getMessages(this.userId);\n        this.connected = true;\n      }\n    })\n    this.kindnessIntroSpeech = this.dialogFlow.introduction[Math.floor(Math.random()*2)]\n  }\n\n  ngOnInit() {\n   \n  }\n\n\n  scenario(context: string){\n    if(context=='ORDER'){\n      if(!this.dialogFlow.box2 && !this.dialogFlow.box3){\n        this.dialogFlow.box1 = true;\n        this.order = this.fdataService.getFirestoreOrder();\n      }\n      \n    }\n    if(context == 'ORDERINFO'){\n      this.dialogFlow.box2 = true;\n    }\n    if(context == 'MORE_HELP'){\n      this.kindnessEndSpeech = this.dialogFlow.sorryMood[Math.floor(Math.random()*3)];\n      this.dialogFlow.box3Option = true;\n      this.dialogFlow.box3 = true;\n    }\n    if(context == 'END'){\n      this.kindnessEndSpeech = this.dialogFlow.happyMood[Math.floor(Math.random()*3)];\n      this.dialogFlow.box3Option = false;\n      this.dialogFlow.box3 = true;\n    }\n    if(context == 'BETTER'){\n      this.dialogFlow.box4 = true;\n    }\n    if(context == 'TALK'){\n      \n      this.msg.author = this.userId;\n        this.msg.content = 'Order Issue';\n        this.msg.date_msg = new Date(Date.now());\n        this.msg.object = \"HELP_CENTER\";\n        this.msg.destination = \"ADMIN\";\n        this.ngfirestore.collection('message').doc('ADMIN').collection('update').add(this.msg).then(()=>{\n          this.textMesage = \"\";\n          this.dialogFlow.transfer = true;\n        })\n    }\n    if(context == 'OTHER'){\n      if(!this.dialogFlow.box1){\n        this.kindnessEndSpeech = '';\n        this.dialogFlow.box3Option = true;\n        this.dialogFlow.box3 = true;\n      }\n      \n    }\n    \n  }\n\n  orderInformation(info: Order){\n   this.orderInfo = info;\n    this.scenario('ORDERINFO');\n\n  }\n  \n  sendMessage(textMessage: string){\n    if(this.dialogFlow.transfer){\n      if(textMessage!=\"\"){\n        this.msg.author = this.userId;\n        this.msg.content = textMessage;\n        this.msg.date_msg = new Date(Date.now());\n        this.msg.object = \"HELP_CENTER\";\n        this.msg.destination = \"ADMIN\";\n        this.ngfirestore.collection('message').doc(this.userId).collection('help').add(this.msg).then(()=>{\n          this.textMesage = \"\";\n        })\n      }\n    }else{\n      this.textMesage = \"\";\n    }\n   \n  }\n\n  getMessages(property: any){\n    this.message = new Array();\n    this.messageCollection = this.ngfirestore.collection('message');\n    this.msgDataFlux = this.messageCollection.doc(property).collection('help', ref=> ref.orderBy('date_msg')).valueChanges();\n   \n    this.msgDataFlux.subscribe(observer=>{\n      this.message = [];\n      observer.forEach(e => {\n      \n        this.message.push({\n              author: e.author,\n              content: e.content,\n              date_msg: e.dte_msg,\n              object: e.object,\n              destination: e.destination\n        });\n\n    });\n    });\n    \n  }\n\n  deleteMessage(property: any){\n    this.ngfirestore\n    .collection('message').doc(property).collection('help')\n    .get()\n    .toPromise()\n    .then((querySnapshot) => {\n    querySnapshot.forEach((doc) => {\n      doc.ref.delete();\n    });\n  });\n   \n  }\n  getDate(date:any){\n    let dating: Date= new Date(date.seconds*1000 + date.nanoseconds);\n      return dating.toDateString() ;\n    }\n}\n","export default \"<ion-header  mode=ios>\\n  <ion-toolbar  color=\\\"dark\\\">\\n    <ion-buttons slot=\\\"start\\\">\\n   <ion-back-button></ion-back-button>\\n    </ion-buttons>\\n    <ion-buttons>\\n      <ion-title  class=\\\"width\\\" mode=ios >\\n        <ion-text size=\\\"LARGE\\\" color=\\\"warning\\\">\\n          K</ion-text>\\n          <ion-text color=\\\"danger\\\"><ion-icon size=\\\"LARGE\\\" name=cart></ion-icon></ion-text>\\n          <ion-text >ta</ion-text><img title=\\\"app header\\\" alt=\\\"image icon\\\" class=\\\"icon\\\" src=\\\"assets/icon/lipstick.png\\\"/><ion-text>og</ion-text>\\n        </ion-title>\\n    </ion-buttons>\\n\\n  </ion-toolbar>\\n  <ion-buttons>\\n    <ion-item-divider>\\n      \\n      <ion-icon name=\\\"information-circle-outline\\\"></ion-icon>\\n      <ion-label>Customer services</ion-label>\\n    </ion-item-divider>\\n  </ion-buttons>\\n </ion-header>\\n<ion-content>\\n  \\n  <div>\\n    <ion-card *ngIf=\\\"connected\\\">\\n      <ion-card-title></ion-card-title>\\n      <ion-card-content>\\n        <ion-text color=\\\"dark\\\">\\n          <b>KINDNESS : </b>{{kindnessIntroSpeech}}\\n        </ion-text>\\n      </ion-card-content>\\n      <ion-card-header>\\n        <ion-card-subtitle>\\n          <ion-button (click)=\\\"scenario('ORDER')\\\" color=\\\"medium\\\">Order issue</ion-button>\\n          <ion-button (click)=\\\"scenario('OTHER')\\\" color=\\\"light\\\">Other ?</ion-button>\\n        </ion-card-subtitle>\\n      </ion-card-header>\\n    </ion-card>\\n    <ion-card *ngIf=\\\"!connected\\\">\\n      <ion-card-title></ion-card-title>\\n      <ion-card-content>\\n        <ion-text color=\\\"dark\\\">\\n          <b>KINDNESS : </b>Please login as user first!\\n        </ion-text>\\n      </ion-card-content>\\n      <ion-card-header>\\n        <ion-card-subtitle>\\n          <ion-button (click)=\\\"scenario('ORDER')\\\" color=\\\"medium\\\">Order issue</ion-button>\\n          <ion-button (click)=\\\"scenario('OTHER')\\\" color=\\\"light\\\">Other ?</ion-button>\\n        </ion-card-subtitle>\\n      </ion-card-header>\\n    </ion-card>\\n\\n    <ion-card *ngIf=\\\"dialogFlow.box1\\\">\\n     \\n      <ion-card-content>\\n        <ion-item>\\n          <ion-text color=\\\"dark\\\">\\n            Which order you mean ?\\n          </ion-text>\\n        </ion-item>\\n        <ng-container *ngFor=\\\"let item of order\\\">\\n          <ion-item *ngIf=\\\"item.shipment.status!=='Delivered'\\\" >\\n            <ion-buttons slot=\\\"start\\\">\\n              <ion-thumbnail  (click)=\\\"orderInformation(item)\\\"  *ngFor=\\\"let product of item.product\\\">\\n                <ion-img [src]=\\\"product.features[0].pictures[0]\\\"></ion-img>\\n              </ion-thumbnail>\\n            </ion-buttons>\\n            <ion-label (click)=\\\"orderInformation(item)\\\" >\\n              <h4>{{item.orderId}}</h4>\\n            </ion-label>\\n          </ion-item>\\n        </ng-container>\\n        \\n        \\n      </ion-card-content>\\n    </ion-card>\\n\\n    <ion-card *ngIf=\\\"dialogFlow.box2\\\">\\n      <ion-card-title></ion-card-title>\\n      <ion-card-content>\\n        <ion-text color=\\\"dark\\\">\\n          Order # <b>{{orderInfo.orderId}}</b>\\n        </ion-text>\\n        <ion-item>\\n          With destination : {{orderInfo.shipment.shipping_destination}}\\n        </ion-item>\\n        <ion-item *ngIf=\\\"orderInfo.shipment.status=='Not shipped yet'\\\">\\n          {{orderInfo.shipment.status}} go to order page for more update about your order\\n        </ion-item>\\n        <ion-item *ngIf=\\\"orderInfo.shipment.status=='Shipped'\\\">\\n          {{orderInfo.shipment.status}}! your order is on the way dear customer.\\n        </ion-item>\\n      </ion-card-content>\\n      <ion-card-header>\\n      <ion-item>Did you find me helpful ? </ion-item>\\n      <ion-item>\\n        <ion-button (click)=\\\"scenario('END')\\\" color=\\\"medium\\\">Yes a lot</ion-button>\\n          <ion-button (click)=\\\"scenario('MORE_HELP')\\\" color=\\\"light\\\">Not enough</ion-button>\\n      </ion-item>\\n      </ion-card-header>\\n    </ion-card>\\n\\n    <ion-card *ngIf=\\\"dialogFlow.box3\\\">\\n      <ion-card-title></ion-card-title>\\n      <ion-card-content>\\n        <ion-text color=\\\"dark\\\">\\n          {{kindnessEndSpeech}}\\n        </ion-text>\\n      </ion-card-content>\\n      <ion-card-header *ngIf=\\\"dialogFlow.box3Option\\\">\\n        <ion-card-subtitle>\\n          <ion-button (click)=\\\"scenario('TALK')\\\" color=\\\"medium\\\">Talk with someone</ion-button>\\n          <ion-button (click)=\\\"scenario('BETTER')\\\" color=\\\"light\\\">Try better next</ion-button>\\n        </ion-card-subtitle>\\n      </ion-card-header>\\n    </ion-card>\\n    \\n    <ion-card *ngIf=\\\"dialogFlow.box4\\\">\\n      <ion-card-title></ion-card-title>\\n      <ion-card-content>\\n        <ion-text color=\\\"dark\\\">\\n         <b>KINDNESS : </b>OK but don't stop shopping for your favorites items in our store\\n        </ion-text>\\n        <ion-button routerLink=\\\"/home\\\" routerDirection=\\\"back\\\">Continue shopping</ion-button>\\n      </ion-card-content>\\n    </ion-card>\\n    \\n    \\n  </div>\\n  <div class=\\\"stream\\\" *ngIf=\\\"connected\\\">\\n    <ion-item lines=\\\"none\\\" *ngFor=\\\"let msg of message\\\">\\n      <ion-chip text-wrap color=\\\"light\\\" *ngIf=\\\"msg.author == userId\\\">You</ion-chip>\\n      <ion-chip text-wrap color=\\\"light\\\" *ngIf=\\\"msg.author !== userId\\\">{{msg.author}}</ion-chip>\\n      <ion-badge text-wrap slot=\\\"start\\\" color=\\\"light\\\" *ngIf=\\\"msg.author != userId\\\">{{ msg.content }}</ion-badge>\\n      <ion-badge text-wrap slot=\\\"end\\\" color=\\\"primary\\\" *ngIf=\\\"msg.author == userId\\\">{{ msg.content }}</ion-badge>\\n      <ion-label>{{msg.date_msg|date}}</ion-label>\\n    </ion-item>\\n  </div>\\n</ion-content>\\n<ion-footer>\\n  <ion-toolbar>\\n    <ion-item>\\n      <ion-input [(ngModel)]=\\\"textMesage\\\" placeholder=\\\"tell us what's happened...\\\"></ion-input>\\n      <ion-button (click)=\\\"sendMessage(textMesage)\\\">Send <ion-icon name=\\\"send\\\"></ion-icon></ion-button>\\n    </ion-item>\\n  </ion-toolbar>\\n</ion-footer>\";","export default \".stream ion-item {\\n  min-height: -webkit-fit-content !important;\\n  min-height: -moz-fit-content !important;\\n  min-height: fit-content !important;\\n  height: 51px;\\n}\\n\\nion-badge {\\n  padding: 10px !important;\\n  text-align: left;\\n  max-width: 80%;\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvaGVscGNlbnRlci9oZWxwY2VudGVyLnBhZ2Uuc2NzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFDQTtFQUNJLDBDQUFBO0VBQUEsdUNBQUE7RUFBQSxrQ0FBQTtFQUNBLFlBQUE7QUFBSjs7QUFFQTtFQUNJLHdCQUFBO0VBQ0EsZ0JBQUE7RUFDQSxjQUFBO0FBQ0oiLCJmaWxlIjoic3JjL2FwcC9oZWxwY2VudGVyL2hlbHBjZW50ZXIucGFnZS5zY3NzIiwic291cmNlc0NvbnRlbnQiOlsiICAgICAgICBcbi5zdHJlYW0gaW9uLWl0ZW0ge1xuICAgIG1pbi1oZWlnaHQ6IGZpdC1jb250ZW50ICFpbXBvcnRhbnQ7XG4gICAgaGVpZ2h0OiA1MXB4O1xufVxuaW9uLWJhZGdlIHtcbiAgICBwYWRkaW5nOiAxMHB4IWltcG9ydGFudDtcbiAgICB0ZXh0LWFsaWduOiBsZWZ0O1xuICAgIG1heC13aWR0aDogODAlO1xufSJdfQ== */\";","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\n\nimport { IonicModule } from '@ionic/angular';\n\nimport { HelpcenterPageRoutingModule } from './helpcenter-routing.module';\n\nimport { HelpcenterPage } from './helpcenter.page';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    IonicModule,\n    HelpcenterPageRoutingModule\n  ],\n  declarations: [HelpcenterPage]\n})\nexport class HelpcenterPageModule {}\n","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { HelpcenterPage } from './helpcenter.page';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: HelpcenterPage\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule],\n})\nexport class HelpcenterPageRoutingModule {}\n"],"sourceRoot":"webpack:///"}